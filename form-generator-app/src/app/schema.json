{
    "swagger": "2.0",
    "info": {
      "title": "schema/workflow/crudapi/api.proto",
      "version": "version not set"
    },
    "schemes": [
      "http",
      "https"
    ],
    "consumes": [
      "application/json"
    ],
    "produces": [
      "application/json"
    ],
    "paths": {
      "/ves.io.charmander.workflow/Object/{object_uid}": {
        "get": {
          "operationId": "Get",
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/crudapiObjectGetRsp"
              }
            }
          },
          "parameters": [
            {
              "name": "object_uid",
              "in": "path",
              "required": true,
              "type": "string"
            },
            {
              "name": "all_backrefs",
              "in": "query",
              "required": false,
              "type": "boolean",
              "format": "boolean"
            },
            {
              "name": "backref_types",
              "in": "query",
              "required": false,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          ],
          "tags": [
            "API"
          ]
        },
        "delete": {
          "operationId": "Delete",
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/crudapiObjectDeleteRsp"
              }
            }
          },
          "parameters": [
            {
              "name": "object_uid",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "tags": [
            "API"
          ]
        },
        "put": {
          "operationId": "Replace",
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/crudapiObjectReplaceRsp"
              }
            }
          },
          "parameters": [
            {
              "name": "object_uid",
              "in": "path",
              "required": true,
              "type": "string"
            },
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/crudapiObjectReplaceReq"
              }
            }
          ],
          "tags": [
            "API"
          ]
        }
      },
      "/ves.io.charmander.workflow/Objects": {
        "get": {
          "operationId": "List",
          "responses": {
            "200": {
              "description": "(streaming responses)",
              "schema": {
                "$ref": "#/definitions/crudapiObjectListRsp"
              }
            }
          },
          "tags": [
            "API"
          ]
        },
        "post": {
          "operationId": "Create",
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/crudapiObjectCreateRsp"
              }
            }
          },
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/crudapiObjectCreateReq"
              }
            }
          ],
          "tags": [
            "API"
          ]
        }
      }
    },
    "definitions": {
      "charmanderworkflowStatusType": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "title": "Description of current state"
          },
          "last_state": {
            "$ref": "#/definitions/workflowState",
            "title": "Previous state of object"
          },
          "state": {
            "$ref": "#/definitions/workflowState",
            "title": "Current state of object"
          }
        },
        "required": ["message", "last_state", "state"],
        "title": "Status of Object"
      },
      "crudapiErrorCode": {
        "type": "string",
        "enum": [
          "EOK",
          "ENOTFOUND",
          "EEXISTS",
          "EUNKNOWN"
        ],
        "default": "EOK"
      },
      "crudapiObjectCreateReq": {
        "type": "object",
        "properties": {
          "metadata": {
            "$ref": "#/definitions/schemaObjectMetaType"
          },
          "spec": {
            "$ref": "#/definitions/workflowSpecType"
          },
          "status": {
            "$ref": "#/definitions/charmanderworkflowStatusType"
          },
          "system_metadata": {
            "$ref": "#/definitions/schemaSystemObjectMetaType"
          }
        }
      },
      "crudapiObjectCreateRsp": {
        "type": "object",
        "properties": {
          "err": {
            "$ref": "#/definitions/crudapiErrorCode"
          },
          "object_uid": {
            "type": "string"
          },
          "metadata": {
            "$ref": "#/definitions/schemaObjectMetaType"
          },
          "spec": {
            "$ref": "#/definitions/workflowSpecType"
          },
          "status": {
            "$ref": "#/definitions/charmanderworkflowStatusType"
          },
          "system_metadata": {
            "$ref": "#/definitions/schemaSystemObjectMetaType"
          }
        }
      },
      "crudapiObjectDeleteRsp": {
        "type": "object",
        "properties": {
          "err": {
            "$ref": "#/definitions/crudapiErrorCode"
          }
        }
      },
      "crudapiObjectGetRsp": {
        "type": "object",
        "properties": {
          "err": {
            "$ref": "#/definitions/crudapiErrorCode"
          },
          "ent_backrefs": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/protobufAny"
            }
          },
          "metadata": {
            "$ref": "#/definitions/schemaObjectMetaType"
          },
          "spec": {
            "$ref": "#/definitions/workflowSpecType"
          },
          "status": {
            "$ref": "#/definitions/charmanderworkflowStatusType"
          },
          "system_metadata": {
            "$ref": "#/definitions/schemaSystemObjectMetaType"
          }
        }
      },
      "crudapiObjectListRsp": {
        "type": "object",
        "properties": {
          "err": {
            "$ref": "#/definitions/crudapiErrorCode"
          },
          "uids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "crudapiObjectReplaceReq": {
        "type": "object",
        "properties": {
          "object_uid": {
            "type": "string"
          },
          "metadata": {
            "$ref": "#/definitions/schemaObjectMetaType"
          },
          "spec": {
            "$ref": "#/definitions/workflowSpecType"
          },
          "status": {
            "$ref": "#/definitions/charmanderworkflowStatusType"
          },
          "system_metadata": {
            "$ref": "#/definitions/schemaSystemObjectMetaType"
          }
        }
      },
      "crudapiObjectReplaceRsp": {
        "type": "object",
        "properties": {
          "err": {
            "$ref": "#/definitions/crudapiErrorCode"
          },
          "metadata": {
            "$ref": "#/definitions/schemaObjectMetaType"
          },
          "spec": {
            "$ref": "#/definitions/workflowSpecType"
          },
          "status": {
            "$ref": "#/definitions/charmanderworkflowStatusType"
          },
          "system_metadata": {
            "$ref": "#/definitions/schemaSystemObjectMetaType"
          }
        }
      },
      "ioschemaStatusType": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Status of the operation.\nOne of: \"Success\" or \"Failure\"."
          },
          "message": {
            "type": "string",
            "description": "A human-readable description of the status of this operation."
          },
          "reason": {
            "type": "string",
            "description": "A machine-readable description of why this operation is in the\n\"Failure\" status. If this value is empty there\nis no information available. A Reason clarifies an HTTP status\ncode but does not override it."
          },
          "code": {
            "type": "integer",
            "format": "int32",
            "description": "Suggested HTTP return code for this status, 0 if not set."
          }
        },
        "description": "Status is a return value for calls that don't return other objects."
      },
      "protobufAny": {
        "type": "object",
        "properties": {
          "type_url": {
            "type": "string",
            "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
          },
          "value": {
            "type": "string",
            "format": "byte",
            "description": "Must be a valid serialized protocol buffer of the above specified type."
          }
        },
        "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(\u0026foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := \u0026pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n     ...\n     foo := \u0026pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
      },
      "schemaInitializerType": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "name of the service that is responsible for initializing this object."
          }
        },
        "description": "Initializer is information about an initializer that has not yet completed."
      },
      "schemaInitializersType": {
        "type": "object",
        "properties": {
          "pending": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/schemaInitializerType"
            },
            "description": "Pending is a list of initializers that must execute in order before this object is initialized.\nWhen the last pending initializer is removed, and no failing result is set, the initializers\nstruct will be set to nil and the object is considered as initialized and visible to all\nclients."
          },
          "result": {
            "$ref": "#/definitions/ioschemaStatusType",
            "description": "If result is set with the Failure field, the object will be persisted to storage and then deleted,\nensuring that other clients can observe the deletion."
          }
        },
        "description": "Initializers tracks the progress of initialization."
      },
      "schemaObjectMetaType": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name must be unique within a namespace."
          },
          "namespace": {
            "type": "string",
            "description": "Namespace defines the space within each name must be unique. Must be a DNS_LABEL."
          },
          "uid": {
            "type": "string",
            "description": "UID is the unique in time and space value for this object. Object create will fail if \nprovided by the client and the value exists in the system. Typically generated by the\nserver on successful creation of an object and is not allowed to change once populated.\nShadowed by SystemObjectMeta's uid field."
          },
          "labels": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "key": { "type": "string" },
                "value": { "type": "string" }
              }
            },
            "description": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors\nand services."
          },
          "annotations": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "key": { "type": "string" },
                "value": { "type": "string" }
              }
            },
            "description": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects."
          }
        },
        "required": ["name", "namespace", "uid"],
        "description": "ObjectMetaType is metadata that all persisted resources must have, which includes all objects\nusers must create."
      },
      "schemaSystemObjectMetaType": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "string",
            "description": "UID is the unique in time and space value for this object. It is typically generated by\nthe server on successful creation of an object and is not allowed to change on PUT\noperations."
          },
          "resourceVersion": {
            "type": "string",
            "description": "An opaque value that represents the internal version of this object that can\nbe used by clients to determine when objects have changed. May be used for optimistic\nconcurrency, change detection, and the watch operation on a resource or set of resources.\nClients must treat these values as opaque and passed unmodified back to the server.\nThey may only be valid for a particular resource or set of resources.\nValue must be treated as opaque by client."
          },
          "creationTimestamp": {
            "type": "string",
            "format": "date-time",
            "description": "CreationTimestamp is a timestamp representing the server time when this object was\ncreated. It is not guaranteed to be set in happens-before order across separate operations.\nClients may not set this value. It is represented in RFC3339 form and is in UTC."
          },
          "deletionTimestamp": {
            "type": "string",
            "format": "date-time",
            "description": "DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This\nfield is set by the server when a graceful deletion is requested by the user, and is not\ndirectly settable by a client. The resource is expected to be deleted (no longer visible\nfrom resource lists, and not reachable by name) after the time in this field, once the\nfinalizers list is empty. As long as the finalizers list contains items, deletion is blocked.\nOnce the deletionTimestamp is set, this value may not be unset or be set further into the\nfuture, although it may be shortened or the resource may be deleted prior to this time.\nFor example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react\nby sending a graceful termination signal to the containers in the pod. After that 30 seconds,\nthe Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,\nremove the pod from the API. In the presence of network partitions, this object may still\nexist after this timestamp, until an administrator or automated process can determine the\nresource is fully terminated.\nIf not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested.\nRead-only."
          },
          "modificationTimestamp": {
            "type": "string",
            "format": "date-time",
            "description": "ModificationTimestamp is a timestamp representing the server time when this object was\nlast modified."
          },
          "initializers": {
            "$ref": "#/definitions/schemaInitializersType",
            "description": "An initializer is a controller which enforces some system invariant at object creation time.\nThis field is a list of initializers that have not yet acted on this object. If nil or empty,\nthis object has been completely initialized. Otherwise, the object is considered uninitialized\nand is hidden (in list/watch and get calls) from clients that haven't explicitly asked to\nobserve uninitialized objects.\n\nWhen an object is created, the system will populate this list with the current set of initializers.\nOnly privileged users may set or modify this list. Once it is empty, it may not be modified further\nby any user."
          },
          "finalizers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Must be empty before the object is deleted from the registry. Each entry\nis an identifier for the responsible component that will remove the entry\nfrom the list. If the deletionTimestamp of the object is non-nil, entries\nin this list can only be removed."
          }
        },
        "description": "SystemObjectMeta is metadata generated or populated by the system for all persisted objects and\ncannot be updated directly by users."
      },
      "workflowAction": {
        "type": "object",
        "properties": {
          "kind": {
            "$ref": "#/definitions/workflowKind",
            "title": "Which plugin serves this action"
          },
          "id": {
            "type": "string",
            "title": "ID of action"
          },
          "prv": {
            "$ref": "#/definitions/workflowProvisionerAction"
          },
          "wrk": {
            "$ref": "#/definitions/workflowWorkflowAction"
          },
          "ntf": {
            "$ref": "#/definitions/workflowNotifierAction"
          },
          "status": {
            "$ref": "#/definitions/workflowActionStatus",
            "title": "Status of action"
          },
          "token": {
            "type": "string",
            "title": "Token is used for notification of Workflow engine"
          },
          "params": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "title": "Params configuration parameters for Action"
          },
          "inputs": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/definitions/workflowInput"
            },
            "description": "Inputs is map of Input which is required in API response.\nIt is used against inputData."
          },
          "input_data": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Data from DoStepReq.\nValidated against inputs."
          }
        },
        "title": "Action is execution of one step of the Workflow"
      },
      "workflowActionStatus": {
        "type": "object",
        "properties": {
          "created": {
            "type": "string",
            "format": "date-time",
            "title": "When action started"
          },
          "finished": {
            "type": "string",
            "format": "date-time",
            "title": "When action finished"
          },
          "message": {
            "type": "string",
            "title": "Long description of state"
          },
          "state": {
            "$ref": "#/definitions/workflowState",
            "title": "One word description of current state"
          }
        },
        "title": "Status of Action step"
      },
      "workflowArtifact": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "title": "Name of Artifact"
          },
          "type": {
            "type": "string",
            "title": "Type of Artifact"
          },
          "path": {
            "type": "string",
            "title": "Path to Artifact"
          }
        },
        "title": "Artifact associated with provisioner execution"
      },
      "workflowInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "title": "Name of input parameter"
          },
          "type": {
            "$ref": "#/definitions/workflowInput_type",
            "title": "Data type of input"
          },
          "required": {
            "type": "boolean",
            "format": "boolean",
            "title": "Optionality of input in API response"
          }
        },
        "description": "Input is parameter description that is needed in API response."
      },
      "workflowInput_type": {
        "type": "string",
        "enum": [
          "UNKNOWN_INPUT",
          "STRING",
          "BOOL",
          "MULTI_STRING"
        ],
        "default": "UNKNOWN_INPUT",
        "description": "- UNKNOWN_INPUT: Zero is used for unknown input",
        "title": "Possible input data types"
      },
      "workflowKind": {
        "type": "string",
        "enum": [
          "UNKNOWN_ACTION",
          "PROVISIONER",
          "WORKFLOW",
          "NOTIFIER"
        ],
        "default": "UNKNOWN_ACTION",
        "description": "- UNKNOWN_ACTION: Zero value is used for unknow kind\n - PROVISIONER: PROVISIONER stands for action handled by Provisioner plugin\n - WORKFLOW: WORKFLOW stands for action handled by Workflow plugin\n - NOTIFIER: NOTIFIER stands for action handled by Notifier plugin",
        "title": "Kind of Action"
      },
      "workflowNotifierAction": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/definitions/workflowNotifyType",
            "title": "Type of Notify action"
          },
          "name": {
            "type": "string",
            "title": "Name of Notify action"
          },
          "message": {
            "type": "string",
            "title": "Notification message"
          },
          "recipient": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Notification recipient"
          }
        },
        "title": "Notifier action for Notifier plugin"
      },
      "workflowNotify": {
        "type": "object",
        "properties": {
          "notifyPolicy": {
            "$ref": "#/definitions/workflowNotifyPolicy",
            "title": "Specifies when the notification should be sent"
          },
          "notifyType": {
            "$ref": "#/definitions/workflowNotifyType",
            "title": "What notification type should be used"
          },
          "recipient": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Notification recipient"
          }
        },
        "title": "Notify serves as configuration of notification"
      },
      "workflowNotifyPolicy": {
        "type": "string",
        "enum": [
          "AT_START",
          "AT_STOP"
        ],
        "default": "AT_START",
        "description": "- AT_START: At start of action\n - AT_STOP: After action finishes",
        "title": "Specifies when the notification should be sent"
      },
      "workflowNotifyType": {
        "type": "string",
        "enum": [
          "UNKNOWN_N_ACTION",
          "EMAIL",
          "SLACK"
        ],
        "default": "UNKNOWN_N_ACTION",
        "description": "- UNKNOWN_N_ACTION: Zero stands for unknown notification type\n - EMAIL: email notification\n - SLACK: slack notification",
        "title": "What notification type should be used"
      },
      "workflowParam": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "title": "Key of parameter"
          },
          "value": {
            "type": "string",
            "title": "Value of parameter"
          }
        },
        "description": "List of Worfklow object parameters associated with workflow type."
      },
      "workflowProvisionerAction": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/definitions/workflowProvisionerType",
            "title": "Type of Provisioner action"
          },
          "job_name": {
            "type": "string",
            "title": "Name of job to be run"
          },
          "artifacts": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/workflowArtifact"
            },
            "title": "Artifacts associated with provisioner execution"
          },
          "notify": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/workflowNotify"
            },
            "title": "Notification configuration for provisioner action"
          }
        },
        "title": "Provisioner action for Provisioner plugin"
      },
      "workflowProvisionerType": {
        "type": "string",
        "enum": [
          "UNKNOWN_P_ACTION",
          "RUN_JOB"
        ],
        "default": "UNKNOWN_P_ACTION",
        "description": "- UNKNOWN_P_ACTION: Zero is used for unknown Provisioner action\n - RUN_JOB: Starts Provisioner job",
        "title": "Possible Provisioner action types"
      },
      "workflowSpecType": {
        "type": "object",
        "properties": {
          "workflow_spec": {
            "$ref": "#/definitions/workflowWorkflowSpecType"
          }
        },
        "title": "Specification of Object"
      },
      "workflowState": {
        "type": "string",
        "enum": [
          "UNKNOW_STATE",
          "NEW",
          "RUNNING",
          "FINISHED",
          "FAILED"
        ],
        "default": "UNKNOW_STATE",
        "description": "- UNKNOW_STATE: Unknow state\n - NEW: State used after creation\n - RUNNING: State when execution is in progress\n - FINISHED: State for execution finished with success\n - FAILED: State for execution finished with failure",
        "title": "One word description of state"
      },
      "workflowWorkflowAction": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/definitions/workflowWorkflowType",
            "title": "Type of Workflow action"
          },
          "name": {
            "type": "string",
            "title": "Name of Workflow action"
          },
          "notify": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/workflowNotify"
            },
            "title": "Notification configuration for workflow action"
          },
          "duration": {
            "type": "integer",
            "format": "int32",
            "title": "Duration of Workflow"
          }
        },
        "title": "Workflow action for Workflow plugin"
      },
      "workflowWorkflowSpecType": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Type of the workflow that is started.\nExample: gopkg.volterra.us/diglett/pkg/workflow.CreateCluster."
          },
          "params": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/workflowParam"
            },
            "description": "List of Worfklow object parameters associated with workflow type.\nFor example site ID for create site workflow."
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/workflowAction"
            },
            "title": "List of Actions in chronological order"
          },
          "duration": {
            "type": "integer",
            "format": "int32",
            "title": "Duration of Workflow"
          }
        },
        "title": "Specification of Object"
      },
      "workflowWorkflowType": {
        "type": "string",
        "enum": [
          "UNKNOWN_W_ACTION",
          "START_WORKFLOW",
          "APPROVAL",
          "WATCH_SITE",
          "WATCH_CLUSTER",
          "EX_CHOICE",
          "M_CHOICE",
          "USER_INPUT"
        ],
        "default": "UNKNOWN_W_ACTION",
        "description": "- UNKNOWN_W_ACTION: Zero is used for unknown Workflow action\n - START_WORKFLOW: Creates new workflow object and starts new workflow\nthrough Workflow plugin\n - APPROVAL: Waits on API call for true/false decision.\n - WATCH_SITE: Watch Pikachu Site object until desired state is configured.\n - WATCH_CLUSTER: Watch Pikachu Cluster object until desired state is configured.\n - EX_CHOICE: Stands for exclusive choice. Waits on API call for pick one\nfrom n choices.\n - M_CHOICE: Stands for exclusive choice. Waits on API call for pick m\nfrom n choices.\n - USER_INPUT: Custom Action type that can be configurable.",
        "title": "Possible Workflow action types"
      }
    }
  }